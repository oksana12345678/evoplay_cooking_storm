{"version":3,"file":"commonHelpers.js","sources":["../src/js/dishes_gallery_swiper.js"],"sourcesContent":["import Swiper from 'swiper';\nimport { Navigation, Keyboard } from 'swiper/modules';\nimport 'swiper/css/navigation';\n\nconst createSwiper = (containerSelector, nextSelector, prevSelector) => {\n  const swiperContainer = document.querySelector(containerSelector);\n  const BUTTON_NEXT = document.querySelector(nextSelector);\n  const BUTTON_PREV = document.querySelector(prevSelector);\n\n  const swiper = new Swiper(swiperContainer, {\n    modules: [Navigation, Keyboard],\n    navigation: {\n      nextEl: BUTTON_NEXT,\n      prevEl: BUTTON_PREV,\n    },\n    direction: 'horizontal',\n    autoHeight: false,\n    autoWidth: false,\n    watchOverflow: false,\n    keyboard: {\n      enabled: true,\n      onlyInViewport: true,\n      pageUpDown: true,\n    },\n    breakpoints: {\n      320: {\n        slidesPerView: 1,\n        spaceBetween: 24,\n      },\n      1200: {\n        slidesPerView: 3,\n      },\n    },\n  });\n\n  swiper.on('reachEnd', () => {\n    setTimeout(() => {\n      swiper.slideTo(0, 1000);\n    }, 1000);\n  });\n\n  swiper.update();\n\n  const updateButtonState = (button, disabled) => {\n    if (disabled) {\n      button.style.opacity = '0.5';\n      button.style.cursor = 'not-allowed';\n    } else {\n      button.style.opacity = '1';\n      button.style.cursor = 'pointer';\n    }\n  };\n\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.attributeName === 'class') {\n        const isDisabled = mutation.target.classList.contains(\n          'swiper-button-disabled'\n        );\n        if (mutation.target === BUTTON_NEXT) {\n          updateButtonState(BUTTON_NEXT, isDisabled);\n        } else if (mutation.target === BUTTON_PREV) {\n          updateButtonState(BUTTON_PREV, isDisabled);\n        }\n      }\n    });\n  });\n\n  observer.observe(BUTTON_NEXT, { attributes: true });\n  observer.observe(BUTTON_PREV, { attributes: true });\n\n  return swiper;\n};\n\nconst swiperOne = createSwiper(\n  '.swiper.swiper-one',\n  '.button-next-svg',\n  '.button-prev-svg'\n);\nconst swiperTwo = createSwiper(\n  '.swiper.swiper-box',\n  '.button-nex',\n  '.button-pre'\n);\n"],"names":["createSwiper","containerSelector","nextSelector","prevSelector","swiperContainer","BUTTON_NEXT","BUTTON_PREV","swiper","Swiper","Navigation","Keyboard","updateButtonState","button","disabled","observer","mutations","mutation","isDisabled"],"mappings":"wyBAIA,MAAMA,EAAe,CAACC,EAAmBC,EAAcC,IAAiB,CACtE,MAAMC,EAAkB,SAAS,cAAcH,CAAiB,EAC1DI,EAAc,SAAS,cAAcH,CAAY,EACjDI,EAAc,SAAS,cAAcH,CAAY,EAEjDI,EAAS,IAAIC,EAAOJ,EAAiB,CACzC,QAAS,CAACK,EAAYC,CAAQ,EAC9B,WAAY,CACV,OAAQL,EACR,OAAQC,CACT,EACD,UAAW,aACX,WAAY,GACZ,UAAW,GACX,cAAe,GACf,SAAU,CACR,QAAS,GACT,eAAgB,GAChB,WAAY,EACb,EACD,YAAa,CACX,IAAK,CACH,cAAe,EACf,aAAc,EACf,EACD,KAAM,CACJ,cAAe,CAChB,CACF,CACL,CAAG,EAEDC,EAAO,GAAG,WAAY,IAAM,CAC1B,WAAW,IAAM,CACfA,EAAO,QAAQ,EAAG,GAAI,CACvB,EAAE,GAAI,CACX,CAAG,EAEDA,EAAO,OAAM,EAEb,MAAMI,EAAoB,CAACC,EAAQC,IAAa,CAC1CA,GACFD,EAAO,MAAM,QAAU,MACvBA,EAAO,MAAM,OAAS,gBAEtBA,EAAO,MAAM,QAAU,IACvBA,EAAO,MAAM,OAAS,UAE5B,EAEQE,EAAW,IAAI,iBAAiBC,GAAa,CACjDA,EAAU,QAAQC,GAAY,CAC5B,GAAIA,EAAS,gBAAkB,QAAS,CACtC,MAAMC,EAAaD,EAAS,OAAO,UAAU,SAC3C,wBACV,EACYA,EAAS,SAAWX,EACtBM,EAAkBN,EAAaY,CAAU,EAChCD,EAAS,SAAWV,GAC7BK,EAAkBL,EAAaW,CAAU,CAE5C,CACP,CAAK,CACL,CAAG,EAED,OAAAH,EAAS,QAAQT,EAAa,CAAE,WAAY,EAAM,CAAA,EAClDS,EAAS,QAAQR,EAAa,CAAE,WAAY,EAAM,CAAA,EAE3CC,CACT,EAEkBP,EAChB,qBACA,mBACA,kBACF,EACkBA,EAChB,qBACA,cACA,aACF"}